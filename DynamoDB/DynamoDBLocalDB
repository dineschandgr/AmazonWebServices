package com.amazonaws.samples;

import java.util.Arrays;
import java.util.HashMap;

import com.amazonaws.services.dynamodbv2.AmazonDynamoDB;
import com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient;
import com.amazonaws.services.dynamodbv2.document.DeleteItemOutcome;
import com.amazonaws.services.dynamodbv2.document.DynamoDB;
import com.amazonaws.services.dynamodbv2.document.Item;
import com.amazonaws.services.dynamodbv2.document.PrimaryKey;
import com.amazonaws.services.dynamodbv2.document.Table;
import com.amazonaws.services.dynamodbv2.document.UpdateItemOutcome;
import com.amazonaws.services.dynamodbv2.document.spec.DeleteItemSpec;
import com.amazonaws.services.dynamodbv2.document.spec.GetItemSpec;
import com.amazonaws.services.dynamodbv2.document.spec.UpdateItemSpec;
import com.amazonaws.services.dynamodbv2.document.utils.NameMap;
import com.amazonaws.services.dynamodbv2.document.utils.ValueMap;
import com.amazonaws.services.dynamodbv2.model.AttributeDefinition;
import com.amazonaws.services.dynamodbv2.model.CreateTableRequest;
import com.amazonaws.services.dynamodbv2.model.KeySchemaElement;
import com.amazonaws.services.dynamodbv2.model.KeyType;
import com.amazonaws.services.dynamodbv2.model.ProvisionedThroughput;
import com.amazonaws.services.dynamodbv2.model.ReturnValue;
import com.amazonaws.services.dynamodbv2.model.ScalarAttributeType;
import com.amazonaws.services.dynamodbv2.util.TableUtils;
import com.sun.javafx.collections.MappingChange.Map;

public class DynamoDBLocalDB {

	static AmazonDynamoDBClient client = new AmazonDynamoDBClient().withEndpoint("http://localhost:8000");
	static DynamoDB dynamoDB = new DynamoDB(client);
	static String tableName = "MyFirstTableTEST";
	
	public static void main(String[] args) {
		try {
			
			
			createTable();
			
			createItem();
			//updateItem();
			retrieveItem();
			deleteItem();


		} catch (Exception e) {
			System.err.println("An error occurred: ");
			System.err.println(e.getMessage());
		}
		
	}
		private static void createTable() throws InterruptedException{

			System.out.println("Attempting to create table; please wait...");
			CreateTableRequest createTableRequest = new CreateTableRequest().withTableName(tableName)
	                .withKeySchema(new KeySchemaElement().withAttributeName("name").withKeyType(KeyType.HASH))
	                .withAttributeDefinitions(new AttributeDefinition().withAttributeName("name").withAttributeType(ScalarAttributeType.S))
	                .withProvisionedThroughput(new ProvisionedThroughput().withReadCapacityUnits(1L).withWriteCapacityUnits(1L));
			TableUtils.createTableIfNotExists((AmazonDynamoDB) dynamoDB,createTableRequest); 
			System.out.println("Success. Table status" );

		}
		
		//To write items to Table using putItem API
		private static void createItem() throws InterruptedException{

			System.out.println("Attempting to create item; please wait...");
			Table table = dynamoDB.getTable(tableName);
			 Item item = new Item() 
			            .withPrimaryKey("user_id", "1")
			            .withNumber("year_born", 1988) 
			            .withString("First_Name", "Steven") 
			            .withString("Last_Name", "Mark"); 
			         
			 Item item1 = new Item() 
			            .withPrimaryKey("user_id", "2")
			            .withNumber("year_born", 1988) 
			            .withString("First_Name", "Steven") 
			            .withString("Last_Name", "Mark1"); 
			 
			table.putItem(item);
			table.putItem(item1);  
			System.out.println("PUT Item success");
		}
		
		private static void retrieveItem() {
		      Table table = dynamoDB.getTable(tableName);

		          GetItemSpec spec = new GetItemSpec().withPrimaryKey("user_id", "1", "year_born", 1988);

		          try {
		              System.out.println("Attempting to read the item...");
		              Item outcome = table.getItem(spec);
		              System.out.println("GetItem succeeded: " + outcome);
		      } catch (Exception e) {
		         System.err.println("Cannot retrieve items.");
		         System.err.println(e.getMessage());
		      }
	}
	
		  /* private static void updateItem() { 
			      Table table = dynamoDB.getTable(tableName);  
			      try {  
			    	  
			    	  UpdateItemSpec updateItemSpec = new UpdateItemSpec()
			    	            .withPrimaryKey(new PrimaryKey("year", year, "title", title)).withUpdateExpression("remove info.actors[0]")
			    	            .withConditionExpression("size(info.actors) > :num").withValueMap(new ValueMap().withNumber(":num", 3))
			    	            .withReturnValues(ReturnValue.UPDATED_NEW);
			         
			         // Confirm 
			         System.out.println("Displaying updated item..."); 
			         System.out.println(outcome.getItem().toJSONPretty());             
			      } catch (Exception e) { 
			         System.err.println("Cannot add an attribute in " + tableName); 
			         System.err.println(e.getMessage()); 
			      }         
		   }*/
		   
		   private static void deleteItem() { 
			      Table table = dynamoDB.getTable(tableName);  
			      try {  
			    	  
			    	  DeleteItemSpec deleteItemSpec = new DeleteItemSpec()
			    	            .withPrimaryKey(new PrimaryKey("user_id", "1", "year_born", 1988));
			          DeleteItemOutcome outcome = table.deleteItem(deleteItemSpec);

			         System.out.println("Displaying deleted item..."); 
			         System.out.println(outcome);             
			      } catch (Exception e) { 
			         System.err.println("Cannot delete an attribute in " + tableName); 
			         System.err.println(e.getMessage()); 
			      }         
			   } 
	}

